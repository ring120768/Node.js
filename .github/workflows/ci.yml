name: CI/CD Pipeline

on:
  push:
    branches: [main, feat/*, fix/*]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint || echo "No lint script found"
        continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    env:
      NODE_ENV: test
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run dual retention system tests
        run: node scripts/test-dual-retention.js
        continue-on-error: true

      - name: Run unit tests
        run: npm test || echo "No test script found"
        continue-on-error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
        continue-on-error: true

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [lint, test, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build || echo "No build script found"
        continue-on-error: true

      - name: Check for uncommitted changes
        run: |
          git diff --exit-code || (echo "Build generated uncommitted changes" && exit 1)

  database-check:
    name: Database Migration Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate SQL syntax
        run: |
          for file in scripts/migrations/*.sql; do
            echo "Checking $file..."
            # Basic SQL syntax validation (can be enhanced with actual psql check)
            if [ -f "$file" ]; then
              echo "✅ $file exists"
            fi
          done

  status-check:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [lint, test, security, build, database-check]
    if: always()
    steps:
      - name: Check CI status
        run: |
          if [ "${{ needs.lint.result }}" == "failure" ] || [ "${{ needs.test.result }}" == "failure" ] || [ "${{ needs.build.result }}" == "failure" ]; then
            echo "❌ CI pipeline failed"
            exit 1
          else
            echo "✅ CI pipeline passed"
          fi
