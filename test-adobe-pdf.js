#!/usr/bin/env node

/**
 * Adobe PDF Services Test Script
 *
 * Usage: node test-adobe-pdf.js
 *
 * This script tests your Adobe PDF Services integration
 */

const adobePdfService = require('./src/services/adobePdfService');
const fs = require('fs');
const path = require('path');

// ANSI color codes for terminal output
const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

async function testAdobePdfServices() {
  log('\n========================================', 'cyan');
  log('  Adobe PDF Services Test Suite', 'cyan');
  log('========================================\n', 'cyan');

  // Test 1: Check if service is initialized
  log('Test 1: Checking Adobe PDF Services initialization...', 'blue');
  if (adobePdfService.isReady()) {
    log('‚úÖ Adobe PDF Services is initialized and ready!', 'green');
  } else {
    log('‚ùå Adobe PDF Services is NOT initialized', 'red');
    log('\nüì• Setup Instructions:', 'yellow');
    log('1. Go to: https://acrobatservices.adobe.com/dc-integration-creation-app-cdn/main.html', 'yellow');
    log('2. Sign in with your Adobe ID', 'yellow');
    log('3. Create new PDF Services API credentials', 'yellow');
    log('4. Download the credentials ZIP file', 'yellow');
    log('5. Extract and copy pdfservices-api-credentials.json to /credentials/', 'yellow');
    log('\nFor detailed instructions, see: /credentials/README.md\n', 'yellow');
    process.exit(1);
  }

  // Test 2: Create a simple test PDF from HTML
  log('\nTest 2: Creating PDF from HTML...', 'blue');
  try {
    const testHtml = `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body {
              font-family: Arial, sans-serif;
              padding: 40px;
              max-width: 800px;
              margin: 0 auto;
            }
            h1 {
              color: #2196F3;
              border-bottom: 3px solid #2196F3;
              padding-bottom: 10px;
            }
            .success-box {
              background: #e8f5e9;
              border-left: 4px solid #4CAF50;
              padding: 20px;
              margin: 20px 0;
              border-radius: 4px;
            }
            .info {
              color: #666;
              font-size: 14px;
              margin-top: 30px;
              padding: 15px;
              background: #f5f5f5;
              border-radius: 4px;
            }
            .timestamp {
              color: #999;
              font-size: 12px;
              margin-top: 20px;
              text-align: right;
            }
          </style>
        </head>
        <body>
          <h1>üéâ Adobe PDF Services Test Report</h1>

          <div class="success-box">
            <h2 style="margin-top: 0; color: #4CAF50;">‚úÖ Integration Successful!</h2>
            <p>Your Adobe PDF Services integration is working correctly.</p>
          </div>

          <h2>Test Details</h2>
          <p><strong>Service:</strong> Adobe PDF Services API</p>
          <p><strong>Operation:</strong> Create PDF from HTML</p>
          <p><strong>Status:</strong> ‚úÖ Successful</p>
          <p><strong>Test Date:</strong> ${new Date().toLocaleString()}</p>

          <h2>Available Features</h2>
          <ul>
            <li>‚úÖ Create PDFs from HTML, Word, images</li>
            <li>‚úÖ Merge multiple PDFs</li>
            <li>‚úÖ Compress PDFs</li>
            <li>‚úÖ OCR (extract text from scanned documents)</li>
            <li>‚úÖ PDF to Word/Excel conversion</li>
            <li>‚úÖ Password protect PDFs</li>
            <li>‚úÖ Extract PDF content</li>
            <li>‚úÖ Split PDFs</li>
          </ul>

          <div class="info">
            <strong>‚ÑπÔ∏è Next Steps:</strong>
            <p>1. Check the generated PDF: <code>./test-output/adobe-test.pdf</code></p>
            <p>2. Read the usage guide: <code>ADOBE_PDF_USAGE.md</code></p>
            <p>3. Integrate into your controllers (examples in usage guide)</p>
          </div>

          <div class="timestamp">
            Generated by Adobe PDF Services<br>
            ${new Date().toISOString()}
          </div>
        </body>
      </html>
    `;

    // Create output directory
    const outputDir = path.join(__dirname, 'test-output');
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }

    const outputPath = path.join(outputDir, 'adobe-test.pdf');
    const pdfBuffer = await adobePdfService.createPdfFromHtml(testHtml, outputPath);

    const fileSizeKB = (pdfBuffer.length / 1024).toFixed(2);
    log(`‚úÖ PDF created successfully!`, 'green');
    log(`   File: ${outputPath}`, 'green');
    log(`   Size: ${fileSizeKB} KB`, 'green');

    // Test 3: Try compressing the PDF
    log('\nTest 3: Compressing PDF...', 'blue');
    const compressedPath = path.join(outputDir, 'adobe-test-compressed.pdf');
    const compressedBuffer = await adobePdfService.compressPdf(outputPath, 'MEDIUM', compressedPath);

    const compressedSizeKB = (compressedBuffer.length / 1024).toFixed(2);
    const compressionRatio = ((1 - (compressedBuffer.length / pdfBuffer.length)) * 100).toFixed(1);

    log(`‚úÖ PDF compressed successfully!`, 'green');
    log(`   Original: ${fileSizeKB} KB`, 'green');
    log(`   Compressed: ${compressedSizeKB} KB`, 'green');
    log(`   Saved: ${compressionRatio}%`, 'green');

    // Summary
    log('\n========================================', 'cyan');
    log('  üéâ All Tests Passed!', 'cyan');
    log('========================================\n', 'cyan');

    log('‚úÖ Adobe PDF Services is working correctly', 'green');
    log('\nüìÑ Generated Files:', 'blue');
    log(`   1. ${outputPath}`, 'green');
    log(`   2. ${compressedPath}`, 'green');

    log('\nüìö Next Steps:', 'yellow');
    log('   1. Open the generated PDFs to verify quality', 'yellow');
    log('   2. Read ADOBE_PDF_USAGE.md for integration examples', 'yellow');
    log('   3. Start using Adobe PDF Services in your controllers\n', 'yellow');

    process.exit(0);

  } catch (error) {
    log('‚ùå Error during PDF operations:', 'red');
    console.error(error);
    log('\nüí° Troubleshooting:', 'yellow');
    log('   1. Verify credentials file exists and is valid', 'yellow');
    log('   2. Check your Adobe API quota hasn\'t been exceeded', 'yellow');
    log('   3. Ensure you have internet connection', 'yellow');
    log('   4. Check server logs for detailed error messages\n', 'yellow');
    process.exit(1);
  }
}

// Run tests
testAdobePdfServices().catch(error => {
  log('\n‚ùå Unexpected error:', 'red');
  console.error(error);
  process.exit(1);
});
